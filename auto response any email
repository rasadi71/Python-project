import imaplib
import email
import smtplib
import time
from email.mime.text import MIMEText
from email.header import decode_header

# Email credentials
EMAIL = "xyz@gmail.com"
PASSWORD = "   "  # Use App Password for Gmail
SMTP_SERVER = "smtp.gmail.com"
IMAP_SERVER = "imap.googlemail.com"

def send_reply(to_email):
    # Create reply message
    msg = MIMEText("Thanks, Sadi Al Gani has received this.")
    msg["Subject"] = "Auto-Reply: Message Received"
    msg["From"] = EMAIL
    msg["To"] = to_email

    # Send email
    with smtplib.SMTP_SSL(SMTP_SERVER, 465) as server:
        server.login(EMAIL, PASSWORD)
        server.sendmail(EMAIL, to_email, msg.as_string())

def check_emails():
    # Connect to IMAP server
    mail = imaplib.IMAP4_SSL(IMAP_SERVER)
    mail.login(EMAIL, PASSWORD)
    mail.select("inbox")

    # Search for unread emails
    _, message_numbers = mail.search(None, "UNSEEN")
    
    for num in message_numbers[0].split():
        # Fetch email
        _, msg_data = mail.fetch(num, "(RFC822)")
        email_body = msg_data[0][1]
        msg = email.message_from_bytes(email_body)

        # Get sender
        from_header = decode_header(msg["From"])[0][0]
        sender = from_header if isinstance(from_header, str) else from_header.decode()
        sender_email = sender.split("<")[-1].strip(">").strip()

        # Send auto-reply
        send_reply(sender_email)
        print(f"Replied to: {sender_email}")

    mail.logout()

# Run continuously
while True:
    try:
        check_emails()
        time.sleep(60)  # Check every 60 seconds
    except Exception as e:
        print(f"Error: {e}")
        time.sleep(60)
